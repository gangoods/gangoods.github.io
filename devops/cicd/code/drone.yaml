version: "3"
volumes:
    drone-data:
services:
  drone-server: # 服务端
    image: drone/drone:2
    container_name: drone-server
    restart: always
    environment:
      DRONE_AGENTS_ENABLED: "true"
      DRONE_GOGS_SERVER: "http://192.168.1.105:10880/"
      DRONE_RPC_SECRET: "00e8790ebd7e353bc75204f736207ece"  #openssl rand -hex 16 生成
      DRONE_SERVER_HOST: "192.168.1.105:8084"
      DRONE_SERVER_PROTO: "http"
      DRONE_USER_CREATE: "username:root,machine:false,admin:true"

      # DRONE_DATABASE_DRIVER: mysql
      # DRONE_DATABASE_DATASOURCE: "root:password@tcp(1.2.3.4:3306)/drone?parseTime=true&loc=Local"
    ports:
      - "8084:80"
      - "8443:443"
    volumes:
      - drone-data:/data
  drone-runner:
    image: drone/drone-runner-docker:1
    container_name: drone-runner
    restart: always
    environment:
      DRONE_RPC_PROTO: "http"
      DRONE_RPC_HOST: "192.168.1.105:8084"
      DRONE_RPC_SECRET: "00e8790ebd7e353bc75204f736207ece"
      DRONE_RUNNER_CAPACITY: "2"
      DRONE_RUNNER_NAME: "my-runner"
    ports:
      - "8300:3000"
    depends_on:
      - drone-server
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /etc/docker:/etc/docker